---

- name: set facts for pgsql-replication role and preflight check
  hosts: database*
  vars:
    pgsqlrep_type_list: [ 'local', 'remote' ]
  vars_files: tower-vars.yml
  tasks:
  - name: DETERMINE IF DB FAILOVER IS MANAGED BY TOOLKIT
    when: not tower_db_external
    block:

    # INPUT pgsqlrep_type_list
    # OUTPUT _pgsqlrep_master_address, _pgsqlrep_replica_address
    - include_role:
        name: tower_replication_preflight  
    
    # end block

- name: Configure PostgreSQL on replicas
  hosts: database_replica
  become: true
  vars_files: tower-vars.yml
  tasks:
  - name: DETERMINE IF DB FAILOVER IS MANAGED BY TOOLKIT
    block:

    - name: Install postgres database the Tower/AWX way
      include_role:
        name: postgres_base
      when: not (pgsqlrep_install_skip | default(False) | bool)

    when: not tower_db_external

- name: Configure PSQL master server
  hosts: database[0]
  become: true
  vars_files: tower-vars.yml
  roles:

  - role: "{{tower_installer_current}}/roles/postgres"
    postgres_exec_vars_only: true

  - role: samdoran.pgsql-replication
    pgsqlrep_role: master
    pgsqlrep_data_path: "{{ pg_conf_dir }}"
    pgsqlrep_service: "{{ postgres_init_name }}"
    pgsqlrep_master_address: "{{ _pgsqlrep_master_address }}"
    pgsqlrep_replica_address: "{{ _pgsqlrep_replica_address }}"
    pgsqlrep_bash: "{{ pg_bash | default('') }}"
    when: not tower_db_external

- name: Configure PSQL replica
  hosts: database_replica
  become: true
  vars_files: tower-vars.yml
  roles:

  - role: "{{tower_installer_current}}/roles/postgres"
    postgres_exec_vars_only: true

  - role: samdoran.pgsql-replication
    pgsqlrep_role: replica
    pgsqlrep_data_path: "{{ pg_conf_dir }}"
    pgsqlrep_service: "{{ postgres_init_name }}"
    pgsqlrep_master_address: "{{ _pgsqlrep_master_address }}"
    pgsqlrep_replica_address: "{{ _pgsqlrep_replica_address }}"
    pgsqlrep_bash: "{{ pg_bash | default('') }}"
    when: not tower_db_external

